{"version":3,"sources":["reducers/TodoReducer.js","reducers/index.js","Store.js","components/Todo.js","action/TodoAction.js","components/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["initialState","books","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","filter","book","id","map","store","createStore","rootReducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Todo","edit","newInput","updateEdit","_this","setState","updateTodo","e","preventDefault","NewTodo","props","this","getTodo","deleteTodo","_this2","react_default","a","createElement","className","onSubmit","bind","onChange","target","value","defaultValue","title","class","onClick","href","deleteItem","Component","connect","dispatch","axios","get","then","res","data","delete","put","AddTodo","todo","handleSubmit","addTodo","placeholder","post","MainComp","Fragment","components_AddTodo","components_Todo","App","es","Store","BrowserRouter","App_MainComp","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc68ad42.chunk.js","sourcesContent":["const initialState = {\n  books: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_TODO\":\n      return {\n        ...state,\n        books: action.payload\n      };\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        books: [action.payload, ...state.books]\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        books: state.books.filter(book => book.id !== action.payload)\n      };\n    case \"UPDATE_TODO\":\n      return {\n        ...state,\n        books: state.books.map(\n          book => (book.id === action.id ? book === action.payload : book)\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport TodoReducer from \"./TodoReducer\";\n\nexport default combineReducers({\n  books: TodoReducer\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducers,\n  {},\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTodo } from \"../action/TodoAction\";\nimport { deleteTodo, updateTodo } from \"../action/TodoAction\";\n\nclass Todo extends Component {\n  state = {\n    edit: false,\n    id: \"\",\n    newInput: \"\"\n  };\n  componentDidMount() {\n    this.props.getTodo();\n  }\n\n  deleteItem(id) {\n    this.props.deleteTodo(id);\n  }\n  updateEdit = id => {\n    this.setState({\n      edit: !this.state.edit,\n      id\n    });\n  };\n  updateTodo = (id, e) => {\n    e.preventDefault();\n    const NewTodo = this.state.newInput;\n    this.props.updateTodo(id, NewTodo);\n    this.setState({ edit: false });\n  };\n  render() {\n    const books = this.props.books;\n    var edit = \"\";\n    if (this.state.id !== \"\") {\n      books.map(book => {\n        if (book.id === this.state.id) {\n          edit = (\n            <li className=\"list-group-item\">\n              <form onSubmit={this.updateTodo.bind(this, book.id)}>\n                <input\n                  onChange={e => this.setState({ newInput: e.target.value })}\n                  className=\"form-control\"\n                  defaultValue={book.title}\n                />\n              </form>\n            </li>\n          );\n        }\n      });\n    }\n\n    return (\n      <div className=\"container text-center text-light\">\n        <h1 className=\"\">Todo List (Made by M.Alvee)</h1>\n\n        <ul class=\"list-group text-dark my-2\">\n          {this.state.edit == false\n            ? books.map(book => (\n                <li className=\"list-group-item\">\n                  {\" \"}\n                  {book.title}{\" \"}\n                  <a\n                    onClick={this.updateEdit.bind(this, book.id)}\n                    href=\"#!\"\n                    className=\"float-right ml-3\"\n                  >\n                    <i class=\"fas fa-marker\" />\n                  </a>\n                  <a\n                    href=\"#!\"\n                    className=\"float-right\"\n                    onClick={this.deleteItem.bind(this, book.id)}\n                  >\n                    <i class=\"far fa-trash-alt\" />\n                  </a>{\" \"}\n                </li>\n              ))\n            : edit}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books.books\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getTodo, deleteTodo, updateTodo }\n)(Todo);\n","import axios from \"axios\";\n\nexport const getTodo = () => dispatch => {\n  axios.get(\"https://jsonplaceholder.typicode.com/todos\").then(res =>\n    dispatch({\n      type: \"GET_TODO\",\n      payload: res.data\n    })\n  );\n};\n\nexport const addTodo = data => dispatch => {\n  axios\n    .post(\"https://jsonplaceholder.typicode.com/todos\", { title: data })\n    .then(res => dispatch({ type: \"ADD_TODO\", payload: res.data }));\n};\n\nexport const deleteTodo = id => dispatch => {\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n  dispatch({\n    type: \"DELETE_TODO\",\n    payload: id\n  });\n};\n\nexport const updateTodo = (id, newInput) => dispatch => {\n  axios\n    .put(`https://jsonplaceholder.typicode.com/todos/${id}`, newInput)\n    .then(res =>\n      dispatch({\n        type: \"UPDATE_TODO\",\n        payload: res.data,\n        id\n      })\n    );\n};\n","import React, { Component } from \"react\";\nimport { addTodo } from \"../action/TodoAction\";\nimport { connect } from \"react-redux\";\n\nclass AddTodo extends Component {\n  state = {\n    todo: \"\"\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const data = this.state.todo;\n    this.props.addTodo(data);\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={e => this.setState({ todo: e.target.value })}\n          type=\"text\"\n          className=\"form-control form-control-lg\"\n          placeholder=\"Enter todo and press Enter\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(AddTodo);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store\";\nimport Todo from \"./components/Todo\";\nimport AddTodo from \"./components/AddTodo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass MainComp extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <AddTodo />\n        <Todo />\n      </React.Fragment>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router>\n          <div className=\"container\">\n            <MainComp />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}